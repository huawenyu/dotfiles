# Install plugins
# 1. git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# 2. Install Plugins: prefix + I/U (update)
# 3. Ref: https://github.com/samoshkin/tmux-config
#
# QuickStart:
#
#   tmux new -As default            Attatch to 'default' if existed, other new+attach
#
# Make it use C-a, similar to gnu-screen
####################################################
##unbind-key -a        # will unbind the all default key bind, but also remove our control key
#unbind-key -a
#run-shell "tmux -f /dev/null -L temp start-server \; list-keys > ~/.tmux.default"
#source-file ~/.tmux.default

set -g default-terminal "screen-256color"
#set -g default-terminal "screen-256color-bce"

set -s set-clipboard on
set -s set-clipboard external
set -s set-clipboard off
#set -as terminal-features ',screen-256color:clipboard'
#set -s copy-command 'xclip -selection clipboard'

# Sane scrolling
# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right

set -gw xterm-keys on # stop shell bindkey when using tmux
setw -g xterm-keys on # stop shell bindkey when using tmux

#unbind-key -a
unbind C-b
unbind l
set -g prefix C-a
bind a   send-prefix
bind C-a last-window
unbind r
bind r source-file ~/.tmux.conf \; display "Reload!"

# detach all other client
bind C-q run "tmux detach-client -a" \; display "Detach clients!"
# Just keep current pane but kill all other pane of current window
unbind K
bind K run "tmux kill-pane -a"
unbind x
bind x respawn-pane -k
#bind K confirm kill-window
#bind d		+=== [default] detach myself

# 0 is too far from ` ;)
set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1
setw -g aggressive-resize on

## [Window size keeps changing when sharing a session #2243](https://github.com/tmux/tmux/issues/2243)
# sets the window size to smallest so that tmux window is sized to the smallest participant
# With tmux 3.1 they changed the default, so we need to set it here
	#set-window-option -g window-size smallest
	setw -g window-size smallest

#set -g default-shell $SHELL
set-option -g default-shell /usr/bin/zsh

#Allows for faster key repetition
set -g escape-time 10
set -g wrap-search off
set -g history-limit 50000
set -g display-time 3000
#set -g pane-active-border-bg colour244
#set -g word-separators " |-_@│"
set -g word-separators "<>(){}[]/'\";@*+,.-_=!£$%^&:#~?`¬|│\\ "
setw -g mode-keys vi
# Set the Layout Alt-4
#setw -g main-pane-height 60
setw -g main-pane-width 119

# Share environmental variables more seamlessly between tmux and ZSH
# https://github.com/MikeDacre/tmux-zsh-environment
# Usage:
#    Publish a var: $ tmux set-env name2 wilson2
#    Check at another shell (<enter> to tigger hook-cmd): $ echo $name2
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY name name1 name2 name3 name4"

# Vi mode copy
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe "xclip -selection clipboard" \; display-message "Copied to clipboard"
#bind-key -T copy-mode-vi 'y' send -X copy-selection
#bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi Escape send -X clear-selection
bind-key -T copy-mode-vi V send -X rectangle-toggle

## [tmux mouse copy-mode jumps to bottom](https://stackoverflow.com/questions/32374907/tmux-mouse-copy-mode-jumps-to-bottom)
	#bind -Tcopy-mode MouseDrag1Pane setw @mode 1\; copy-mode -M
	#bind -Tcopy-mode MouseDragEnd1Pane if -F '#{@mode}' 'send -X copy-selection' 'send -X copy-selection-and-cancel'
	#bind -n MouseDrag1Pane if -F '#{mouse_any_flag}' 'if -F "#{pane_in_mode}" "setw -u @mode; copy-mode -M" "send-keys -M"' "setw -u @mode; copy-mode -M"
	unbind-key -Tcopy-mode-vi MouseDragEnd1Pane

####################################################
# Work with programmable-SplitKeyboard twokey-click feature
# Space+W       'w', list-windows
# Space+R       ',', rename-window
# Space+C       '[', copy-mode
# Space+V       ']', paste
# Space+S       'C+p', save-history, comefrom plugin: tmux-logging
##Space+A       ';', toggle-pane
bind-key    -T prefix       C-w                 choose-tree -w
bind-key    -T prefix       C-,                 command-prompt -I "#W" "rename-window '%%'"
bind-key    -T prefix       \;                  command-prompt "swap-window -t 2"
#bind-key    -T prefix      C-;                 last-pane
bind-key    -T prefix       C-[                 copy-mode
bind-key    -T prefix       C-]                 paste-buffer
# create window next-to me
bind-key    -T prefix       C-c                 new-window -a -c "#{pane_current_path}" -n 'debug-#{window_name}'

# (no prefix) Shift arrow to swap windows:
#   -d    keep focus on the swapped window
bind-key -n S-Left swap-window -d -t -1
bind-key -n S-Right swap-window -d -t +1


## ref: https://stackoverflow.com/questions/35016458/how-to-write-if-statement-in-tmux-conf-to-set-different-options-for-different-t
## ~/.fzf/bin/fzf-tmux: fast window/session switching
##     download from https://github.com/junegunn/fzf/blob/master/bin/fzf-tmux
##
#if-shell -b '[ "$(echo "$TMUX_VERSION < 3.0" | tr -d [:lower:] | bc)" = 1 ]' '\
#    unbind-key -T prefix C-t; bind-key -T prefix C-t run-shell "tmux list-windows -F \"##I:##W\" | fzf-tmux | cut -d \":\" -f 1 | xargs tmux select-window -t" \
#    unbind-key -T prefix C-b; bind-key -T prefix C-b run-shell "tmux list-sessions -F \"##S\" | fzf-tmux | xargs tmux switch -t" '
#
## tmux 3.0a, 3.1b
#if-shell -b '[ "$(echo "$TMUX_VERSION >= 3.0" | tr -d [:lower:] | bc)" = 1 ]' '\
#    unbind-key -T prefix C-t; bind-key -T prefix C-t run-shell -b "tmux list-windows -F \"##I:##W\" | fzf-tmux | cut -d \":\" -f 1 | xargs tmux select-window -t"; \
#    unbind-key -T prefix C-b; bind-key -T prefix C-b run-shell -b "tmux list-sessions -F \"##S\" | fzf-tmux | xargs tmux switch -t"'

# If fail with 'returned 123', maybe we should create a softlink to bash's path:
# Reason: the dir of fzf not in the PATH of bash, but only exist in zsh's PATH
#   should create softlink to fzf, fzf-tmux
# which fzf-tmux
# ln -s <fzf-tmux> /usr/local/bin/fzf-tmux
unbind-key -T prefix C-t;
bind-key -T prefix C-t run-shell -b "tmux list-windows -F '##I:##W' | fzf-tmux | cut -d ':' -f 1 | xargs -r tmux select-window -t"
####################################################

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

bind-key ] run "tmux set-buffer \"$(xclip -selection clipboard -o)\"; tmux paste-buffer"

# loud or quiet?
set -g focus-events on
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none
set -g monitor-activity off
set -gw xterm-keys on

####################################################
# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Mouse
set -g mouse on
####################################################


####################################################
# set status bar
set -g status on
set -g status-justify centre
set -g status-bg colour235 #base02
set -g status-fg colour136 #yellow
#set -g status-attr default     # invalid 3.0
#set -g status-attr dim         # invalid 3.0
set -g status-keys vi
set -g status-interval 3
set -g status-left-length 50
set -g status-right-length 50
setw -g status-left-length 90
setw -g status-right-length 90

####################################################
# vimpostor/vim-tpipeline: Merge vim-status/tmux-status
set -g status-position bottom
#set -g status-style bg=default
set -g status-left '#(cat #{socket_path}-\#{session_id}-vimbridge)'
set -g status-right '#(cat #{socket_path}-\#{session_id}-vimbridge-R)'
# 12/27/2024 change status to vim-merge
#set -g status-position top
#set -g status-style default,dim,fg="colour136",bg="colour235"
##set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
##set -g status-left ' #S '
#set -g status-left ' #S #I.#P'
##set -g status-right '#[fg=white,bg=default]%a %l:%M %p %Y-%m-%d'
##set -g status-right '#[fg=white,bg=default]#{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %l:%M %p %Y-%m-%d'
#set -g status-right '#[fg=green,bg=default]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load -g 0 -t 2 -i 3)|%a%l:%M%P %m-%d'
####################################################
#  Theme & Colors

#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow
#set -g pane-border-format "#{pane_index} #{pane_title} #{pane_current_command}"
set -g pane-border-format "[#{pane_title}]"


# default window title colors
#setw -g window-status-fg colour244 #base0      # invalid 3.0
#setw -g window-status-bg default               # invalid 3.0
#setw -g window-status-attr dim                 # invalid 3.0

# active window title colors
#setw -g window-status-current-fg colour166 #orange         # invalid 3.0
#setw -g window-status-current-bg default       # invalid 3.0
#setw -g window-status-current-attr bright      # invalid 3.0

# v2.9
setw -g window-status-style default,dim,fg="colour244",bg="default"
setw -g window-status-current-style bright,fg="colour166",bg="default"

# message text
#set -g message-bg colour235 #base02            # invalid 3.0
#set -g message-fg colour166 #orange            # invalid 3.0
# v2.9
set -g message-style bg="colour235",fg="colour166"
####################################################

####################################################
# set terminal title
set -g set-titles off
set -g allow-rename off
setw -g automatic-rename off

## Set window title string
##  #H  Hostname of local host
##  #I  Current window index
##  #P  Current pane index
##  #S  Session name
##  #T  Current window title
##  #W  Current window name
##  #   A literal ‘#’
#setw -g automatic-rename
#set -g set-titles-string '#S:#I.#P #W'
####################################################


####################################################
# Mouse & copy-mode
set -g @scroll-down-exit-copy-mode "off"
####################################################


####################################################
# Smart pane switching with awareness of vim splits
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind Space run-shell -b "tmux setenv tmux_curdir $(tmux display-message -p -F '#{pane_current_path}'); tmux display-message 'set tmux_curdir done';"

#maximizing and restoring panes.
bind -n M-m resize-pane -Z \;
# Will disable <Enter>
#bind -n C-m resize-pane -Z \;

# Should diable gnu-terminal's shortkey Alt+num
#bind -n M-o     send-keys C-o
#bind -n M-i     send-keys C-i
#bind -n M-n     send-keys C-n
#bind -n M-p     send-keys C-p
#bind -n M-[     send-keys C-[
#bind -n M-]     send-keys C-]

# Using vim-tmux-navigator sometime not works
bind -n M-h     select-pane -L
bind -n M-j     select-pane -D
bind -n M-k     select-pane -U
bind -n M-l     select-pane -R

#bind -n C-h    select-pane -L
#bind -n C-j    select-pane -D
#bind -n C-k    select-pane -U
#bind -n C-l    select-pane -R

## Use Alt-arrow keys without prefix key to switch panes
##bind -n M-Left  send-keys C-w \; send-keys -l >
##bind -n M-Right send-keys C-w \; send-keys -l <
##bind -n M-Up    send-keys C-w \; send-keys -l +
##bind -n M-Down  send-keys C-w \; send-keys -l -
#
## Using vim-tmux-navigator
#bind -n M-Left  send-keys C-w \; send-keys h
#bind -n M-Right send-keys C-w \; send-keys l
#bind -n M-Up    send-keys C-w \; send-keys k
#bind -n M-Down  send-keys C-w \; send-keys j
#bind -n S-h     send-keys C-w \; send-keys h
#bind -n S-j     send-keys C-w \; send-keys j
#bind -n S-k     send-keys C-w \; send-keys k
#bind -n S-l     send-keys C-w \; send-keys l
#
##bind -n C-Left  send-keys Escape \; send-keys -l gT
##bind -n C-Right send-keys Escape \; send-keys -l gt
##bind -n C-Up    previous-window
##bind -n C-Down  next-window

# (no prefix) Shift arrow to switch windows
#bind -n S-Left  previous-window
#bind -n S-Right next-window

bind -n M-1     select-window -t 1
bind -n M-2     select-window -t 2
bind -n M-3     select-window -t 3
bind -n M-4     select-window -t 4
bind -n M-5     select-window -t 5
bind -n M-6     select-window -t 6
bind -n M-7     select-window -t 7
bind -n M-8     select-window -t 8
bind -n M-9     select-window -t 9
bind -n M-0     select-window -t 10
bind -n M->     select-window -n
bind -n M-<     select-window -p

#bind -n M-7     send-keys Escape \; send-keys -l 1gt
#bind -n M-8     send-keys Escape \; send-keys -l 2gt
#bind -n M-9     send-keys Escape \; send-keys -l 3gt
#bind -n M-0     send-keys Escape \; send-keys -l 4gt

# Clear both screen and history {{{2
bind -n C-x     send-keys C-l \; run 'tmux clear-history' \; run 'rm -fr tmux-history*' \;
#bind -n C-x run-shell -b "tmux show-messages | tail -1 | grep -q on; if [[ \$? == 0 ]]; then export toggle=off; echo true; else export toggle=on; echo false; fi; tmux display-message \$toggle &> /dev/null;;"
bind-key y capture-pane -S -200 \; save-buffer '/tmp/vim.yank' \; delete-buffer \; display 'Save last 200 to /tmp/vim.yank' \;
#bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

bind-key H pipe-pane 'cat > $HOME/tmuxlog/tmux-#W.log' \; display-message 'Started logging to $HOME/tmuxlog/tmux-#W.log'
bind-key h pipe-pane \; display-message 'Ended logging to $HOME/tmuxlog/tmux-#W.log'

bind-key p pipe-pane -o '$HOME/tmuxlog/log.pipe' \; display-message 'Pipe to $HOME/tmuxlog/log.pipe'
unbind p

# List of plugins
## 1. git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
## 2. Install Plugins: prefix + I/U (update)

set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-copycat'

#set -g @plugin 'tmux-plugins/tmux-cpu'
# brew install tmux-mem-cpu-load
#set -g @plugin 'thewtex/tmux-mem-cpu-load'

## Save log to HOME
# Capture Start: prefix + alt + p
# Capture Stop: prefix + alt + c
# Capture Whole: prefix + alt + shift + p
set -g @logging-path "$HOME/tmuxlog"
set -g @logging-filename "log.log"
set -g @screen-capture-path "$HOME/tmuxlog"
set -g @screen-capture-filename "screen.log"
set -g @save-complete-history-path "$HOME/tmuxlog"
set -g @save-complete-history-filename "tmux.log"
#set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'huawenyu/tmux-logging'

## Save/restore session
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore
set -g @plugin 'tmux-plugins/tmux-resurrect'

# automatic restore when when computer/server/tmux is turned-on or started
# cons: cause screen flash
set -g @continuum-restore 'on'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @plugin 'NHDaly/tmux-better-mouse-mode'

# Ctrl-L cause screen blinking
# https://askubuntu.com/questions/434240/ctrll-in-terminal
# addto zshrc to remove the bindkey:   bindkey -r "^L"
set -g @plugin 'christoomey/vim-tmux-navigator'

#set -g @plugin 'fmount/tmux-layout'

#set -g @shell_mode 'vi'
## We can check by: xsel -p/b/s | cat
## prefix + y: copy current line
## 'primary' or 'secondary' or 'clipboard'
set -g @yank_selection 'primary'
set -g @yank_selection_mouse 'clipboard'
set -g @yank_action 'copy-pipe'
set -g @plugin 'tmux-plugins/tmux-yank'

# prefix + F
unbind f
set -g @fingers-key f
set -g @fingers-pattern-0 'git rebase --(abort|continue)'
set -g @fingers-pattern-1 'yolo'
set -g @plugin 'Morantron/tmux-fingers'

# Press PREFIX + @ and select an entry to copy to your clipboard.

# prefix + F (Shift+F).
#set -g @plugin 'junegunn/tmux-fzf-maccy'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin '0xAF/tmux-public-ip'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

